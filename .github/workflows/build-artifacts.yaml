name: Build artifacts

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  setup:
    name: ⚙️ Setup
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: 📄 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup environment
        uses: ./.github/actions/setup

      - name: 🔄 Sync dependencies
        run: uv sync --frozen

  linting:
    name: 🔎 Linting
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 📄 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup environment
        uses: ./.github/actions/setup

      - name: 🔎 Lint code
        run: uvx ruff check .

  formatting:
    name: 📝 Formatting
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 📄 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup environment
        uses: ./.github/actions/setup

      - name: 📝 Format code
        run: uvx ruff format --check --exclude "algorithms/_config/templates,app/server/logic/file_reading/processing_interface.py" .

  type-checking:
    name: 👀 Type checking
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 📄 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup environment
        uses: ./.github/actions/setup

      - name: 👀 Check types
        run: uv run pyright .

  build:
    name: 🔨 Build artifact
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: [setup, linting, formatting, type-checking]
    steps:
      - name: 📄 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup environment
        uses: ./.github/actions/setup

      - name: 🔨 Build executable
        run: uv run pyinstaller ./NetworkStreamTool.spec

      - name: 🔗 Copy internal files
        run: cp -r ./.to_add_to_internal/* ./dist/NetworkStreamTool/_internal/
        shell: bash

      - name: 🔗 Copy assets, algorithms, demos and experiments directories
        run: cp -r ./_assets ./algorithms ./demos ./experiments ./dist/NetworkStreamTool/
        shell: bash

      - name: 📤 Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: NetworkStreamTool-${{ runner.os }}
          path: dist/NetworkStreamTool
